<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RealtyDB_ClientView"
                    xmlns:swi="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:UCs="clr-namespace:RealtyDB_ClientView.User_Controls"
                    xmlns:CCs="clr-namespace:RealtyDB_ClientView.Custom_Controls"
                    >
                    

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Geometry x:Key="CheckMarker">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Foreground" Value="#FF222020"/>
        <!--<Setter Property="FontStyle" Value="Italic"/>-->
        <Setter Property="FontFamily" Value="Glametrix, Verdana" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Name="border_tooltip" BorderBrush="{DynamicResource ProgressBarIndicatorAnimatedFill}" 
                            BorderThickness="2" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border.Background>
                            <RadialGradientBrush SpreadMethod="Pad" RadiusY="0.6" RadiusX="0.8" Center="0.5,1">
                                <GradientStop Color="#FFFDFDFF" Offset="0"/>
                                <GradientStop Color="#FFECECFF" Offset="1"/>
                                <GradientStop Color="#FFE3E4EC" Offset="0.698"/>
                                <GradientStop Color="#FFF5F5FF" Offset="0.419"/>
                            </RadialGradientBrush>
                        </Border.Background>
                        <ContentPresenter Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="border_tooltip" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="border_tooltip" Property="SnapsToDevicePixels" Value="True"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border_tooltip" Property="Background" Value="{StaticResource BackgroundToolTipDisabled}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="#888"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="BorderContextMenu" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" 
                            BorderThickness="2" CornerRadius="4" >
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="#FFC1CED6" Offset="1"/>
                                <GradientStop Color="#FFE5EAEE" Offset="0.278"/>
                                <GradientStop Color="#FFDEE6EC" Offset="0.56"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}" x:Key="professorsMenuStyle">
        <!--<Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>-->
        <!--<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>-->
        <!--<Setter Property="BorderThickness" Value="0,0,0,1"/>-->
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Path Data="M6.5,13 C23,27.5 22.5,27 22.5,27 22.66654,31.500053 288.16018,32.166779 287.99351,27.500085 L301.4932,13 z" 
                              Stretch="Fill" Stroke="DarkBlue" VerticalAlignment="Top">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF8F94E6" Offset="0"/>
                                    <GradientStop Color="#FFDBDFE4" Offset="1"/>
                                    <GradientStop Color="#FFAEDADA" Offset="0.694"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Border SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="9*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="Center" Grid.Column="1"/>

                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.78"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type StatusBar}" x:Key="ProfessorsStatusBar">
        <Setter Property="Foreground" Value="{StaticResource MenuItemControlForeground}"/>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>-->
        <!--<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>-->
        <!--<Setter Property="BorderThickness" Value="1"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Grid>
                        <Path Data="M6.5,13 C23,27.5 22.5,27 22.5,27 22.66654,31.500053 288.16018,32.166779 287.99351,27.500085 L301.4932,13 z" 
                              Stretch="Fill" Stroke="DarkBlue" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF8F94E6" Offset="0"/>
                                    <GradientStop Color="#FFDBDFE4" Offset="1"/>
                                    <GradientStop Color="#FFAEDADA" Offset="0.694"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Border SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="9*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="Center" Grid.Column="1"/>

                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.78"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type StatusBarItem}">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" 
                            SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Width="3" BorderThickness="1,0,1,0" BorderBrush="{StaticResource ControlForeground}" 
                                    Margin="6,0,2,0"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForeground2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource MenuItemControlForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3,2,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3,2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="professorsListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="content"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="content"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="selected_bg" Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="selected_bg" Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}" Margin="1,1,1,1" SnapsToDevicePixels="True" x:Name="grid">
                        <Rectangle x:Name="bg" IsHitTestVisible="False" Fill="Transparent"/>
                        <Rectangle x:Name="selected_bg" IsHitTestVisible="False" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}"/>
                                    <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="content" Margin="3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ControlForeground}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Margin="0" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
            <Rectangle Margin="0" x:Name="InnerBorderHeaderMenu"/>
            <DockPanel>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,4,0" x:Name="IconHeaderMenu" VerticalAlignment="Center" ContentSource="Icon"/>
                <Path x:Name="CheckMarkerMenuItem" Visibility="Collapsed" FlowDirection="LeftToRight" Margin="6,0,0,0"  VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource CheckMarker}"/>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
            </DockPanel>
            <Popup x:Name="PART_Popup" Focusable="False" AllowsTransparency="True" HorizontalOffset="1" IsOpen="{TemplateBinding IsSubmenuOpen}"
                   Placement="Bottom" PopupAnimation="Scroll" VerticalOffset="-1">
                <ContentControl IsTabStop="False" x:Name="SubmenuBorder" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconHeaderMenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="CheckMarkerMenuItem" Value="Visible"/>
                <Setter Property="Visibility" TargetName="IconHeaderMenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Fill" TargetName="InnerBorderHeaderMenu" Value="{StaticResource BackgroundHoverMenu}"/>
                <Setter Property="Stroke" TargetName="InnerBorderHeaderMenu" Value="{StaticResource BorderMenuItem}"/>
                <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Fill" TargetName="InnerBorderHeaderMenu" Value="{StaticResource SelectedHeadermenu}"/>
                <Setter Property="Stroke" TargetName="InnerBorderHeaderMenu" Value="{StaticResource BorderMenuItem}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill" TargetName="CheckMarkerMenuItem" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource ControlLightBackground}" BorderBrush="{StaticResource BorderMenuItem}" BorderThickness="1">
            <Grid>
                <Rectangle HorizontalAlignment="Left" Margin="2" Width="28" Fill="{StaticResource IconBackgroundMenuItem}" RadiusX="2" RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left" Margin="30,2,0,2" Width="1" Fill="Transparent"/>
                <Rectangle HorizontalAlignment="Left" Margin="31,2,0,2" Width="1" Fill="Transparent"/>
                <ContentPresenter Margin="2,0"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Margin="1" x:Name="BackgroundMenuItem" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
            <Rectangle Margin="0" x:Name="InnerBorderHeaderMenu" RadiusX="2" RadiusY="2" />
            <DockPanel>
                <ContentPresenter x:Name="IconHeaderMenu" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,4,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <Path x:Name="CheckMarkerMenuItem" Visibility="Collapsed" FlowDirection="LeftToRight" Margin="6,0,0,0"  VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource CheckMarker}"/>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconHeaderMenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="CheckMarkerMenuItem" Value="Visible"/>
                <Setter Property="Visibility" TargetName="IconHeaderMenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Stroke" TargetName="InnerBorderHeaderMenu" Value="{StaticResource BorderMenuItem}"/>
                <Setter Property="Fill" TargetName="InnerBorderHeaderMenu" Value="Transparent"/>
                <Setter Property="Fill" TargetName="BackgroundMenuItem" Value="Transparent"/>
                <Setter Property="Foreground" Value="#eee"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Fill" TargetName="BackgroundMenuItem" Value="Transparent"/>
                <Setter Property="Stroke" TargetName="InnerBorderHeaderMenu" Value="{StaticResource BorderMenuItem}"/>
                <Setter Property="Fill" TargetName="InnerBorderHeaderMenu" Value="Transparent"/>
                <Setter Property="StrokeDashArray" TargetName="InnerBorderHeaderMenu" Value="1,2"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill" TargetName="CheckMarkerMenuItem" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type CCs:ExtendedMenuItem}}" TargetType="{x:Type CCs:ExtendedMenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="BackgroundSubmenuItem" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle Margin="1" x:Name="InnerBorderSubmenuItem" RadiusX="2" RadiusY="2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="IconSubmenu" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1"  VerticalAlignment="Center" ContentSource="Icon"/>
                <Border Visibility="Hidden" Margin="1" x:Name="CheckedSubmenu" Width="22" Height="22" Background="Transparent">
                    <Path FlowDirection="LeftToRight" x:Name="PathCheckedSubmenu" Width="9" Height="11" Fill="{TemplateBinding Foreground}" Data="{StaticResource CheckMarker}"/>
                </Border>
                <ContentPresenter VerticalAlignment="Center"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconSubmenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="CheckedSubmenu" Value="Visible"/>
                <Setter Property="Visibility" TargetName="IconSubmenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Fill" TargetName="BackgroundSubmenuItem" Value="{StaticResource BackgroundHoverSubmenu}"/>
                <Setter Property="Stroke" TargetName="BackgroundSubmenuItem" Value="{StaticResource BorderMenuItem}"/>
                <Setter Property="Stroke" TargetName="InnerBorderSubmenuItem" Value="#ddd"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                <Setter Property="Fill" TargetName="PathCheckedSubmenu" Value="{StaticResource DisabledBrush}"/>
                <Setter Property="Opacity" TargetName="CheckedSubmenu" Value="0.72"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="BackgroundHeaderSubmenu" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle Margin="1" x:Name="InnerBorderHeaderSubmenu" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="IconHeaderSubmenu" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1"  VerticalAlignment="Center" ContentSource="Icon"/>
                <Border x:Name="CheckedHeaderSubmenu" Visibility="Hidden" Margin="1"  Width="22" Height="22" Background="Transparent">
                    <Path x:Name="PathCheckedHeaderSubmenu" FlowDirection="LeftToRight"  Width="9" Height="11" Fill="{TemplateBinding Foreground}" Data="{StaticResource CheckMarker}"/>
                </Border>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock Visibility="Collapsed" Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
                <Path Margin="4,0,0,0" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Grid.Column="5" Data="{StaticResource RightArrow}"/>
            </Grid>
            <Popup x:Name="PART_Popup" Focusable="False" AllowsTransparency="True" HorizontalOffset="-2" IsOpen="{TemplateBinding IsSubmenuOpen}"
                   Placement="Right" PopupAnimation="Slide" VerticalOffset="-2" >
                <ContentControl x:Name="SubmenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}" >
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconHeaderSubmenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="CheckedHeaderSubmenu" Value="Visible"/>
                <Setter Property="Visibility" TargetName="IconHeaderSubmenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Fill" TargetName="BackgroundHeaderSubmenu" Value="{StaticResource BackgroundHoverSubmenu}"/>
                <Setter Property="Stroke" TargetName="BackgroundHeaderSubmenu" Value="{StaticResource BorderMenuItem}"/>
                <Setter Property="Stroke" TargetName="InnerBorderHeaderSubmenu" Value="#ddd"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                <Setter Property="Fill" TargetName="PathCheckedHeaderSubmenu" Value="{StaticResource DisabledBrush}"/>
                <Setter Property="Opacity" TargetName="CheckedHeaderSubmenu" Value="0.72"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- Expander -->
    <Style TargetType="{x:Type ToggleButton}" x:Key="ExpanderDownHeaderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5" BorderThickness="0">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" Margin="4,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </Grid.LayoutTransform>
                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5" Grid.Column="2">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,3" Grid.Column="1" VerticalAlignment="Top" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="180"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,3" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </Grid.LayoutTransform>
                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5" Grid.Column="0">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,3" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProfessorsExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                        <DockPanel>
                            <ToggleButton x:Name="ToggleButtonExpander" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" 
                                          FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource FocusLine}" 
                                          Margin="1,1,1,0" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" 
                                          Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"
                                          />
                            <Grid Visibility="Collapsed" x:Name="grid" Margin="5,0,0,0">
                                <Border x:Name="border" Background="{StaticResource ControlLightBackground}" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="5" Margin="0"/>
                                <ContentPresenter x:Name="ContentExpander" Focusable="False" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Top" DockPanel.Dock="Bottom" />
                                <Grid.OpacityMask>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Black"/>
                                        <GradientStop x:Name="grstop_opacity" Offset="0.05" Color="Transparent"/>
                                    </LinearGradientBrush>
                                </Grid.OpacityMask>
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation Duration="0:0:1.5" From="0.05" To="3" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:1.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation Duration="0:0:1.5" From="3" To="0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" >
                            <Setter Property="Margin" TargetName="grid" Value="1,0,1,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ContentExpander" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="ToggleButtonExpander" Value="Left" />
                            <Setter Property="Style" TargetName="ToggleButtonExpander" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundExpanderRight}"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,1,0,1"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ContentExpander" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ToggleButtonExpander" Value="Bottom" />
                            <Setter Property="Style" TargetName="ToggleButtonExpander" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundExpanderBottom}"/>
                            <Setter Property="Margin" TargetName="grid" Value="1,0,1,0"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ContentExpander" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="ToggleButtonExpander" Value="Right" />
                            <Setter Property="Style" TargetName="ToggleButtonExpander" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundExpanderLeft}"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,1,0,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="25" />
        <Setter Property="IsThreeState" Value="False" />
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisualStyle}" />-->
        <Setter Property="Foreground" Value="#FF110022" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased" />
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="FlowDirection" Value="RightToLeft" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, 
                                                                    Path=Height, UpdateSourceTrigger=PropertyChanged}"
                              MinHeight="20" MinWidth="20" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="3*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="4*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="4*" />
                                </Grid.RowDefinitions>

                                <Border Name="MainBorder" Grid.ColumnSpan="8" Grid.RowSpan="8"
                                    CornerRadius="4" BorderThickness="1" Background="Transparent" />

                                <Border Name="InnerBorder" Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5" BorderThickness="1" BorderBrush="#808080" />

                                <Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="#808080"/>

                                <Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5" Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0" Stretch="Fill" Stroke="#3babe3"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                   >
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF184C70" Offset="0"/>
                                            <GradientStop Color="#FF64A0C9" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>

                                <Path Name="InderminateMark"
                                  Grid.Column="3" Grid.Row="4" Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0" Stretch="Fill" StrokeThickness="0" Fill="#808080" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="CP" VerticalAlignment="Center" HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="CP" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="AliceBlue" BlurRadius="5" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="CP" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="AliceBlue" BlurRadius="5" ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MainBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="SteelBlue" BlurRadius="5" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="#81d2eb" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                            <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                            <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="forLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="forTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF1B1B1B" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="0" />
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="Label_T" TargetType="{x:Type Label}">
        <Grid>
            <Path Stretch="Fill"  x:Name="Border" Data="M400,400 L415,350 L1000,350 L1015,400 L1000,450 L415,450 z">
                <Path.Fill>
                    <RadialGradientBrush x:Name="FUCK" RadiusX="2" RadiusY="1.2" Opacity="0.7"  GradientOrigin="0,0.5">
                        <GradientStop Color="Gray" Offset="0"/>
                        <GradientStop Color="#FF8A8AC3" Offset="0.7" />
                        <GradientStop Color="Blue" Offset="0.95"/>
                    </RadialGradientBrush>
                </Path.Fill>
                <Path.Effect>
                    <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="0.6" RenderingBias="Quality" ShadowDepth="1" />
                </Path.Effect>
            </Path>
            <Border Margin="0,0,0,0">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
                </Border.Effect>
                <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="White" 
        				HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        				TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
            </Border>
            <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="Red" 
        			HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        			TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
        </Grid>

    </ControlTemplate>

    <ControlTemplate x:Key="Label_X" TargetType="{x:Type Label}">
        <Grid>
            <Path Stretch="Fill"  x:Name="Border" Data="M415,430 L415,370 L1000,370 L1050,400 L1000,430 z">
                <Path.Fill>
                    <RadialGradientBrush x:Name="FUCK" RadiusX="2" RadiusY="1.2" Opacity="0.7"  GradientOrigin="0,0.5">
                        <GradientStop Color="#FF86B6FB" Offset="0"/>
                        <GradientStop Color="#FF8A8AC3" Offset="0.7" />
                        <GradientStop Color="Blue" Offset="0.95"/>
                    </RadialGradientBrush>
                </Path.Fill>
                <Path.Effect>
                    <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="0.6" RenderingBias="Quality" ShadowDepth="1" />
                </Path.Effect>
            </Path>
            <Border Margin="0,0,0,0">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
                </Border.Effect>
                <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="White" 
        				HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        				TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
            </Border>
            <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="Red" 
        			HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        			TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
        </Grid>

    </ControlTemplate>

    <ControlTemplate x:Key="AnotherComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="1" Background="#FFF3F3F3" 
                    BorderBrush="#FFF3F3F3" BorderThickness="1" >
                <Border.Effect>
                    <DropShadowEffect x:Name="DSE" Color="AliceBlue" RenderingBias="Quality" ShadowDepth="0" BlurRadius="1"></DropShadowEffect>
                </Border.Effect>

            </Border>
            <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="1,0,0,1" Background="WhiteSmoke"
                    BorderBrush="#FF9292E2" Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="DarkBlue" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#FFA8A8E2" />
                <Setter TargetName="Arrow" Property="Fill" Value="DarkBlue" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" 
                                                     From="1" To="15" Duration="0:0:0:0.1"  FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" 
                                                     From="15" To="1" Duration="0:0:0:0.1"  FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <!--<Setter TargetName="Border" Property="BorderBrush" Value="#FF8F8FF9" />-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ooo" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Verdana, Calibri,Arial"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="IsTextSearchCaseSensitive" Value="False" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="StaysOpenOnEdit" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource AnotherComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            <DropShadowEffect Color="AliceBlue" BlurRadius="0" ShadowDepth="0" RenderingBias="Quality"  x:Name="DSE"/>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" TextWrapping="Wrap">
                            <TextBox.Effect>
                                <DropShadowEffect Color="#FF000CFF" BlurRadius="3" ShadowDepth="0" RenderingBias="Quality" Opacity="0.5"/>
                            </TextBox.Effect>
                        </TextBox>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#FFF3F3F3" BorderThickness="1,1,1,1" CornerRadius="1" Margin="0,0,0,3"
                                        BorderBrush="AliceBlue"/>
                                <!--***Scroll***-->
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ComboBox.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius">
                                    <DoubleAnimation  AutoReverse="False" From="0" To="10"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <!--<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            </Trigger>-->
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <!-- ComboBoxItem -->
    <Style x:Key="ComboBoxItem_T" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Green"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                            </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="5">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="0,0,18,5" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentPresenterStyle" TargetType="ContentPresenter">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Color="#FF0B0B40" RenderingBias="Quality" ShadowDepth="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="ProfessorsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.4" />
                                    <VisualTransition To="Pressed" />
                                    <VisualTransition From="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.25" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentHost" To="#32ebfb"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.75" />
                                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentHost" To="{StaticResource DisabledForeground}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="DisabledElement" Background="{StaticResource DisabledBrush}" CornerRadius="2" Opacity="0">
                            <Border BorderBrush="{StaticResource DisabledBorderBrush}" BorderThickness="0,0,1,1" CornerRadius="2" />
                        </Border>
                        <Border x:Name="NormalElement" CornerRadius="2" 
                                BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="White"/>
                                    <GradientStop Color="#FFCADEEC" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="#FF102895" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="MouseOverElement" BorderBrush="{StaticResource ControlActiveBorderBrush}" CornerRadius="2" Opacity="0" 
                                BorderThickness="{TemplateBinding BorderThickness}" Background="#FF91D7DE"/>
                        <Border x:Name="PressedElement" Background="{StaticResource ControlBackgroundPressed}" CornerRadius="2" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlActiveBorderBrush}"/>
                        <ContentPresenter x:Name="ContentHost" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ClipToBounds" Value="True" />
        <!--<Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect x:Name="DSE" Color="#FF9EBAD3" BlurRadius="0" RenderingBias="Quality" ShadowDepth="0" />
                </Setter.Value>
            </Setter>-->
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border" BorderThickness="1" BorderBrush="AliceBlue" CornerRadius="0,0,18,5" Background="{TemplateBinding Background}">
                            <!--<Border.Effect>
                                            <DropShadowEffect BlurRadius="0" Color="LightBlue" ShadowDepth="0" RenderingBias="Quality" />
                                        </Border.Effect>-->
                            <ContentPresenter Name="Content" Style="{StaticResource ContentPresenterStyle}"/>
                        </Border>
                    </Grid>



                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />

                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Blue" />
                            </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    -->
        <!--<Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" 
                                                     From="0" To="15" Duration="0:0:0:0.1"  FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" 
                                                     From="15" To="0" Duration="0:0:0:0.1"  FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>-->
        <!--
                </Trigger>
            </Style.Triggers>-->
    </Style>

    <Style x:Key="ProfessorsRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Foreground" Value="#FF110033"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine_Occupado}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="background_radiobutton"
                                            Duration="0:0:0.3" To="{StaticResource BorderBrushGradientColor1}"/>
                            <ColorAnimation Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="background_radiobutton"
                                            Duration="0:0:0.3" To="{StaticResource BorderBrushGradientColor2}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="background_radiobutton"
                                            Duration="0:0:0.3" To="{StaticResource BorderBrushSolidColor}"/>
                            <ColorAnimation Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="background_radiobutton"
                                            Duration="0:0:0.3" To="{StaticResource BorderBrushSolidColor}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse Height="14" Margin="1" x:Name="background_radiobutton" Width="14" Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                                <Ellipse Height="6" Width="6" x:Name="bullet_checked_radiobutton" Fill="{StaticResource ControlActiveBorderBrush}" Opacity="0"
                                         Stroke="Transparent" StrokeThickness="1"/>
                                <Ellipse Height="12" Width="12" x:Name="bullet_disabled_radiobutton" Opacity="0"
                                         Fill="{StaticResource DisabledBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="bullet_checked_radiobutton" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="bullet_checked_radiobutton" Property="Opacity" Value="1"/>
                            <Setter TargetName="bullet_checked_radiobutton" Property="Fill" Value="Transparent"/>
                            <Setter TargetName="bullet_checked_radiobutton" Property="Stroke" Value="{StaticResource ControlActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bullet_disabled_radiobutton" Property="Opacity" Value="1"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="1" 
                BorderBrush="#FFF3F3F3" BorderThickness="1" >
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF7F3C3" Offset="0"/>
                        <GradientStop Color="#FFFDD772" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border.Effect>
                    <DropShadowEffect x:Name="DSE" Color="AliceBlue" RenderingBias="Quality" ShadowDepth="0" BlurRadius="1" />
                </Border.Effect>
            </Border>
            <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="1,0,0,1" Margin="1" BorderThickness="0.5" >
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FF0031D6" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF9F5D3" Offset="0"/>
                        <GradientStop Color="#FFFEE7FF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <!--<Path x:Name="Arrow" Grid.Column="1" Fill="DarkBlue" HorizontalAlignment="Center" VerticalAlignment="Center"
                Data="M -2 0 L 2 4 L 6 0 Z"/>-->
            <Path x:Name="Arrow" Data="M86.487805,95.926829 L134.64615,95.926829 182.35416,170.54861 246.31428,95.426657 294.07051,94.57283 182.35436,214.08486 z"
                    Width="10" Height="10" Stretch="Fill" StrokeThickness="1"
                    Grid.Column="1" Fill="AliceBlue" Stroke="SteelBlue" Margin="3" RenderTransformOrigin="0.5,0.5" 
                    VerticalAlignment="Center" HorizontalAlignment="Center"   >
                <Path.RenderTransform>
                    <RotateTransform x:Name="RT" />
                </Path.RenderTransform>
                <Path.Effect>
                    <DropShadowEffect Color="DarkBlue" ShadowDepth="0" BlurRadius="2.5" />
                </Path.Effect>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius" 
                                                    From="1" To="15" Duration="0:0:0.25"  FillBehavior="HoldEnd"/>
                            <DoubleAnimation Storyboard.TargetName="RT" Storyboard.TargetProperty="Angle" From="-15" To="15"
                                            Duration="0:0:0.15" RepeatBehavior="2x" AutoReverse="True" FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RT" Storyboard.TargetProperty="Angle" From="0"  To="180" 
                                                            Duration="0:0:0.25" FillBehavior="HoldEnd" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RT" Storyboard.TargetProperty="Angle" From="180" To="0" 
                                                            Duration="0:0:0.25" FillBehavior="HoldEnd"  />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Arrow" Property="Fill" Value="DarkBlue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ProfessorsListBoxStyle" TargetType="{x:Type ListBox}">
        <Style.Resources>
            <DataTemplate x:Key="checkboxDateTemplate">
                <CheckBox Content="{Binding}" Focusable="False"
                                      IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                        NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, BindsDirectlyToSource=True, 
                                  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"
                              Style="{StaticResource CheckBoxStyle}"
                                  >
                    <swi:Interaction.Triggers>
                        <swi:EventTrigger EventName="Checked">
                            <ei:CallMethodAction MethodName="CheckBox_CheckedChanged" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UCs:ListboxInPopup, Mode=FindAncestor}}" />
                        </swi:EventTrigger>
                        <swi:EventTrigger EventName="Unchecked">
                            <ei:CallMethodAction MethodName="CheckBox_CheckedChanged" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UCs:ListboxInPopup, Mode=FindAncestor}}" />
                        </swi:EventTrigger>
                    </swi:Interaction.Triggers>
                </CheckBox>
            </DataTemplate>
            <DataTemplate x:Key="RadioButtonDataTemplate">
                <RadioButton Content="{Binding}" Focusable="False"
                                      IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                        NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, BindsDirectlyToSource=True, 
                                  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"
                                  Style="{StaticResource ProfessorsRadioButtonStyle}"
                                  >
                    <swi:Interaction.Triggers>
                        <swi:EventTrigger EventName="Checked">
                            <ei:CallMethodAction MethodName="RadioButton_CheckedChanged" TargetObject="{Binding RelativeSource={RelativeSource AncestorType= UCs:ListboxInPopup, Mode=FindAncestor}}" />
                        </swi:EventTrigger>
                    </swi:Interaction.Triggers>
                </RadioButton>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Foreground" Value="#FF110033"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="border" BorderThickness="1"
                            CornerRadius="4">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,0" MappingMode="RelativeToBoundingBox" StartPoint="1,1">
                                <GradientStop Color="#FFABF0E3" Offset="0.786"/>
                                <GradientStop Color="#FF0051FF" Offset="0"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ScrollViewer>
                            <ItemsPresenter Margin="2" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionMode,RelativeSource={RelativeSource Mode=Self}}" Value="Multiple">
                <Setter Property="ItemTemplate" Value="{StaticResource checkboxDateTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionMode,RelativeSource={RelativeSource Mode=Self}}" Value="Single">
                <Setter Property="ItemTemplate" Value="{StaticResource RadioButtonDataTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>