<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RealtyDB_ClientView"
                    xmlns:CCs="clr-namespace:RealtyDB_ClientView.Custom_Controls"
                    >


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ScrollBarStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ExtendedTabControl">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFAAAAAA" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer  VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" SnapsToDevicePixels="True">
                            <TabPanel x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" Background="Transparent" />
                        </ScrollViewer>
                        <Border x:Name="ContentPanel" Grid.Row="1" BorderThickness="1" CornerRadius="2" KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" 
                                    BorderBrush="AliceBlue">
                            <Border.Background>
                                <ImageBrush ImageSource="/RealtyDB_ClientView;component/Images/background.jpg" Opacity="0.8"/>
                            </Border.Background>
                            <!--<ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />-->
                            <Grid x:Name="PART_ItemsHolder" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <!--<Storyboard Duration="0:0:0:0.2" FillBehavior="HoldEnd">
                                            <ColorAnimation Storyboard.TargetName="BorderBckg_LGB" Storyboard.TargetProperty="GradientStops[0].Color"
                                                            To="#FF0A041A"/>
                                            <ColorAnimation Storyboard.TargetName="BorderBckg_LGB" Storyboard.TargetProperty="GradientStops[1].Color"
                                                            To="#FF0A041A "/>
                                            <ColorAnimation Storyboard.TargetName="BorderBckg_LGB" Storyboard.TargetProperty="GradientStops[2].Color"
                                                            To="PowderBlue"/>
                                            -->
                                    <!--<DoubleAnimation Storyboard.TargetName="Border_DSE" Storyboard.TargetProperty="BlurRadius"
                                                             From="0" To="15"/>-->
                                    <!--
                                        </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <!--<VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderLightColor}"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>-->
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Margin="0,0,0,-5" BorderThickness="1,1,1,0" CornerRadius="4,12,0,0" 
                                  MinWidth="100" Height="30" BorderBrush="AliceBlue">
                            <!--<Border.Effect>
                                    <DropShadowEffect x:Name="Border_DSE" Color="LightYellow" RenderingBias="Quality" BlurRadius="0" ShadowDepth="0" />
                                </Border.Effect>-->
                            <Border.Background>
                                <LinearGradientBrush x:Name="BorderBckg_LGB" StartPoint="0.5,0" EndPoint="0.5,1.5" Opacity="1">
                                    <GradientStopCollection>
                                        <GradientStop Color="#FF99B1F3" Offset="0" />
                                        <GradientStop Color="#FFD0E1E4" Offset="0.6" />
                                        <GradientStop Color="Transparent" Offset="0.9" />
                                    </GradientStopCollection>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                              ContentSource="Header" Margin="6,1,6,1" RecognizesAccessKey="True" TextBlock.Foreground="White" 
                                TextBlock.FontFamily="Glametrix" TextBlock.FontSize="24" TextBlock.TextAlignment="Center"
                                    ClipToBounds="True" SnapsToDevicePixels="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <!--<SolidColorBrush Color="#FF45A7BD" Opacity="0.95" />-->
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="1">
                                        <GradientStop Color="#FF1A347C" Offset="0" />
                                        <GradientStop Color="#FF4675B9" Offset="0.6" />
                                        <GradientStop Color="#FF8CE3FD" Offset="0.9" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" TargetName="Border" Value="35" />
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--скролл вьювер сука ну зачем ой бляяяять-->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Grid.Row="0" Grid.Column="0" Command="{x:Static ScrollBar.LineUpCommand}"
                                CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="M 0 0 L 0 7 L 4 3.5 Z"/>
                        </RepeatButton>
                        <RepeatButton
                        Grid.Row="2"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineDownCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="M 0 0 L 0 7 L 4 3.5 Z"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <!--<Setter Property="IsCheckable" Value="True" />-->
                <!--<Setter Property="IsHitTestVisible" Value="True" />-->
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--мама дорогая блять сколько кзамла-->
    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1"
                            BorderBrush="AliceBlue">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False"
                            StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"
                        HorizontalAlignment="Center" VerticalAlignment="Center" 
                        TextBlock.Foreground="White" TextBlock.FontFamily="Glametrix" TextBlock.FontSize="30" TextBlock.TextAlignment="Center"
                        ClipToBounds="True" SnapsToDevicePixels="True">
                    <ContentPresenter.Effect>
                        <DropShadowEffect Color="LightBlue" ShadowDepth="0" BlurRadius="10" RenderingBias="Quality" />
                    </ContentPresenter.Effect>
                </ContentPresenter>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsHighlighted" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0" />
                                <GradientStop Color="Transparent" Offset="0.5" />
                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                            <GradientStop Color="Transparent"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Red" Offset="0" />
                            <GradientStop Color="Transparent" Offset="0.5" />
                            <GradientStop Color="Red" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--моя кошка объявила мне гражданскую войну она срёт теперь в углу-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" MinHeight="30" MinWidth="150">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"
                        HorizontalAlignment="Center" VerticalAlignment="Center" 
                        TextBlock.Foreground="White" TextBlock.FontFamily="Glametrix" TextBlock.FontSize="30" TextBlock.TextAlignment="Center"
                        ClipToBounds="True" SnapsToDevicePixels="True">
                    <ContentPresenter.Effect>
                        <DropShadowEffect Color="LightBlue" ShadowDepth="0" BlurRadius="10" RenderingBias="Quality" />
                    </ContentPresenter.Effect>
                </ContentPresenter>

                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                    Margin="5,2,2,2" DockPanel.Dock="Right" />
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Data="M 0 0 L 0 10 L 6 5.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="AliceBlue" />
                    </Path.Fill>
                    <!--<Path.Effect>
                            <DropShadowEffect Color="White" BlurRadius="30" RenderingBias="Quality" ShadowDepth="0" x:Name="DSE"/>
                        </Path.Effect>-->
                </Path>
                <Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}"
                         AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderBrush="AliceBlue" BorderThickness="1">
                        <Border.Background>
                            <ImageBrush ImageSource="/RealtyDB_ClientView;component/Images/popup background template.jpg"/>
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect Color="AliceBlue" BlurRadius="10" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="0.5" />
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--в рот ебаааать-->


    <!--Шаблон для заголовка?-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" CornerRadius="0,0,20,5" BorderBrush="#FF591F8F" BorderThickness="1.5" Margin="0,0,2,0">
            <Border.Effect>
                <DropShadowEffect x:Name="DSE_Border" Color="AliceBlue" BlurRadius="2" ShadowDepth="0" RenderingBias="Quality"/>
            </Border.Effect>
            <Grid>
                <ContentPresenter x:Name="CP" Margin="3,0,3,0" ContentSource="Header" 
                        HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" 
                        TextBlock.Foreground="White" TextBlock.FontFamily="Glametrix" TextBlock.FontSize="35" TextBlock.TextAlignment="Center"
                                    ClipToBounds="True" SnapsToDevicePixels="True" >
                    <ContentPresenter.Effect>
                        <DropShadowEffect Color="LightBlue" ShadowDepth="0" BlurRadius="5" RenderingBias="Quality" />
                    </ContentPresenter.Effect>
                </ContentPresenter>
                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False"
                    PopupAnimation="Slide">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1.5" BorderBrush="AliceBlue">
                        <Border.Background>
                            <ImageBrush ImageSource="/RealtyDB_ClientView;component/Images/popup background template.jpg"/>
                        </Border.Background>
                        <!--<Border.Effect>
                                <DropShadowEffect Color="AliceBlue" BlurRadius="10" ShadowDepth="0" RenderingBias="Quality" />
                            </Border.Effect>-->


                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                    <!--<Popup.Effect>
                            <DropShadowEffect Color="Red" BlurRadius="20" ShadowDepth="0" RenderingBias="Quality" />
                        </Popup.Effect>-->
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />-->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Duration="0:0:0.5" FillBehavior="HoldEnd" RepeatBehavior="1x" AutoReverse="False" >
                            <ColorAnimation Storyboard.TargetName="DSE_Border" Storyboard.TargetProperty="Color" 
                                           From="AliceBlue" To="Coral"/>
                            <DoubleAnimation Storyboard.TargetName="DSE_Border" Storyboard.TargetProperty="BlurRadius" To="15"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Duration="0:0:0.5" FillBehavior="HoldEnd" RepeatBehavior="1x" AutoReverse="False" >
                            <ColorAnimation Storyboard.TargetName="DSE_Border" Storyboard.TargetProperty="Color" 
                                           From="SkyBlue" To="AliceBlue"/>
                            <DoubleAnimation Storyboard.TargetName="DSE_Border" Storyboard.TargetProperty="BlurRadius" To="3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                
                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                <Setter TargetName="Border" Property="Panel.ZIndex" Value="10"/>
                <!--<Setter TargetName="CP" Property="TextBlock.Foreground" Value="#FFB4E2E2" />-->
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--хуй знает что это и зачем. я вообще не понимаю я ли это какое время года - зима/лето.-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderBrush="AliceBlue" BorderThickness="1">
            <!--<Grid>-->
            <ContentPresenter x:Name="TTText" Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                <ContentPresenter.Effect>
                    <DropShadowEffect BlurRadius="0" RenderingBias="Quality" Color="Red" ShadowDepth="0" x:Name="DSE" Opacity="0"/>
                </ContentPresenter.Effect>
            </ContentPresenter>
            <!--</Grid>-->
        </Border>
        <ControlTemplate.Triggers>


            <Trigger Property="IsHighlighted" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius"
                                                     From="0" To="15" Duration="0:0:0:0.1" FillBehavior="HoldEnd"/>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="Opacity"
                                                 From="0" To="1" Duration="0:0:0:0.1" FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="BlurRadius"
                                                     From="15" To="0" Duration="0:0:0:0.1" FillBehavior="HoldEnd"/>
                            <DoubleAnimation Storyboard.TargetName="DSE" Storyboard.TargetProperty="Opacity"
                                                 From="1" To="0" Duration="0:0:0:0.1" FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFF7C38" />
                        <!--<LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource ControlLightColor}" />
                                        <GradientStop Color="{StaticResource ControlMouseOverColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>-->
                    </Setter.Value>

                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" TargetName="TTText">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Само меню -->

    <Style x:Key="MenuStyle" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Grid>
                        <Path Stretch="Fill"  Name="path">
                            <Path.Fill>
                                <ImageBrush ImageSource="/RealtyDB_ClientView;component/Images/menu panel template 2.jpg"/>
                            </Path.Fill>
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" x:Name="TTX"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Data>
                                <PathGeometry x:Name="PG">
                                    <PathFigure StartPoint="0,0" IsClosed="True" IsFilled="True">
                                        <LineSegment Point="0,50"/>
                                        <LineSegment Point="500,50" />
                                        <ArcSegment Point="575,25" Size="100,75" IsSmoothJoin="True" />
                                        <ArcSegment Point="600,0" Size="150,90" IsSmoothJoin="True" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                            <Path.Effect>
                                <DropShadowEffect BlurRadius="20" Color="AliceBlue" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="0" />
                            </Path.Effect>
                        </Path>
                        <Border Margin="1" >
                            <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Menu}" x:Key="professorsMenuStyle">
        <!--<Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>-->
        <!--<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>-->
        <!--<Setter Property="BorderThickness" Value="0,0,0,1"/>-->
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Path Data="M6.5,13 C23,27.5 22.5,27 22.5,27 22.66654,31.500053 288.16018,32.166779 287.99351,27.500085 L301.4932,13 z" 
                              Stretch="Fill" Stroke="DarkBlue" VerticalAlignment="Top">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF8F94E6" Offset="0"/>
                                    <GradientStop Color="#FFDBDFE4" Offset="1"/>
                                    <GradientStop Color="#FFAEDADA" Offset="0.694"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Border SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="9*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="Center" Grid.Column="1"/>

                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.78"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type StatusBar}" x:Key="alreadyNotProfessorsStatusBar">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Grid>
                        <Border SnapsToDevicePixels="True" CornerRadius="2,0,2,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD6D6D6" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                           VerticalAlignment="Center"/>

                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="Opacity" Value="0.78"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type CCs:ExtendedMenuItem}}" TargetType="{x:Type CCs:ExtendedMenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="BackgroundSubmenuItem" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle Margin="1" x:Name="InnerBorderSubmenuItem" RadiusX="2" RadiusY="2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="IconSubmenu" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1"  VerticalAlignment="Center" ContentSource="Icon"/>
                <Border Visibility="Hidden" Margin="1" x:Name="CheckedSubmenu" Width="22" Height="22" Background="Transparent">
                    <Path FlowDirection="LeftToRight" x:Name="PathCheckedSubmenu" Width="9" Height="11" Fill="{TemplateBinding Foreground}" Data="{StaticResource CheckMarker}"/>
                </Border>
                <ContentPresenter VerticalAlignment="Center"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock Margin="{TemplateBinding Padding}" Grid.Column="4" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconSubmenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="CheckedSubmenu" Value="Visible"/>
                <Setter Property="Visibility" TargetName="IconSubmenu" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Fill" TargetName="BackgroundSubmenuItem" Value="{StaticResource BackgroundHoverSubmenu}"/>
                <Setter Property="Stroke" TargetName="BackgroundSubmenuItem" Value="{StaticResource BorderMenuItem}"/>
                <Setter Property="Stroke" TargetName="InnerBorderSubmenuItem" Value="#ddd"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                <Setter Property="Fill" TargetName="PathCheckedSubmenu" Value="{StaticResource DisabledBrush}"/>
                <Setter Property="Opacity" TargetName="CheckedSubmenu" Value="0.72"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


</ResourceDictionary>