
        <ControlTemplate x:Key="CMT" TargetType="ContextMenu">
            <Grid>
                <Path Stretch="Fill"  x:Name="Border" Data="M15,15 L15,-15 L100,-15 L130,0 L100,15 z">
                    <Path.Fill>
                        <RadialGradientBrush x:Name="FUCK" RadiusX="2" RadiusY="1.2" Opacity="0.7"  GradientOrigin="0,0.5">
                            <GradientStop Color="#FF86B6FB" Offset="0"/>
                            <GradientStop Color="#FF8A8AC3" Offset="0.7" />
                            <GradientStop Color="Blue" Offset="0.95"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                    <!--<Path.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="0.6" RenderingBias="Quality" ShadowDepth="1" />
                    </Path.Effect>-->
                </Path>
                <Border Margin="0,0,0,0">
                    <!--<Border.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
                    </Border.Effect>-->
                    <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="White" 
        				HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        				TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
                </Border>
                <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="Red" 
        			HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        			TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
            </Grid>
        </ControlTemplate>
        
        <ControlTemplate x:Key="Label_W" TargetType="Label">
            <Grid>
                <Path Stretch="Fill"  x:Name="Border" Data="M15,15 L15,-15 L100,-15 L130,0 L100,15 z">
                    <Path.Fill>
                        <RadialGradientBrush x:Name="FUCK" RadiusX="2" RadiusY="1.2" Opacity="0.7"  GradientOrigin="0,0.5">
                            <GradientStop Color="#FF86B6FB" Offset="0"/>
                            <GradientStop Color="#FF8A8AC3" Offset="0.7" />
                            <GradientStop Color="Blue" Offset="0.95"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                    <!--<Path.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="0.6" RenderingBias="Quality" ShadowDepth="1" />
                    </Path.Effect>-->
                </Path>
                <Border Margin="0,0,0,0">
                    <!--<Border.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
                    </Border.Effect>-->
                    <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="White" 
        				HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        				TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
                </Border>
                <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="Red" 
        			HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="24"
        			TextBlock.TextAlignment="Center" SnapsToDevicePixels="True"/>
            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="answerTemplate" TargetType="{x:Type Button}">
            <ControlTemplate.Resources>
                <!--<local:Baboolya x:Key="WISH" x:Name="WISH"/>-->
                <!--<local:ValueConverter x:Key="VC" x:Name="VC" CandidateValue="Text" />-->
                <PathGeometry x:Key="Left">
                    <PathFigure StartPoint="0,0" IsClosed="False" IsFilled="False">
                        <LineSegment Point="-500,0"/>
                    </PathFigure>
                </PathGeometry>
                <PathGeometry x:Key="Right">
                    <PathFigure StartPoint="0,0" IsClosed="False" IsFilled="False">
                        <LineSegment Point="500,0"/>
                    </PathFigure>
                </PathGeometry>
            </ControlTemplate.Resources>
            <Grid x:Name="GRRR">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="GRTX" X="0" />
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <!--<VisualStateGroup x:Name="FUCKTHIS">-->

                    <!--</VisualStateGroup>-->
                    <VisualStateGroup x:Name="colorChanges">
                        <VisualState x:Name="Still">
                            <Storyboard>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color" To="Black" 
        							RepeatBehavior="1x" Duration="0"  FillBehavior="HoldEnd"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color" To="DarkBlue" 
        							RepeatBehavior="1x" Duration="0" FillBehavior="HoldEnd" />
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color" To="Blue" 
        							RepeatBehavior="1x" Duration="0" FillBehavior="HoldEnd" />
                                <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" To="0.7"
        							RepeatBehavior="1x" Duration="0" FillBehavior="HoldEnd" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Correct">
                            <Storyboard>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color" From ="Yellow" To="Green" 
        							RepeatBehavior="5x" Duration="0:0:0.3"  FillBehavior="HoldEnd" AutoReverse="True"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color" From ="Yellow" To="Green" 
        							RepeatBehavior="5x" Duration="0:0:0.3" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color" From ="Yellow" To="Green" 
        							RepeatBehavior="5x" Duration="0:0:0.3" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" From="0.7" To="1"
        							RepeatBehavior="5x" Duration="0:0:0.3" FillBehavior="HoldEnd" AutoReverse="True"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Incorrect">
                            <Storyboard>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color" From ="Yellow" To="OrangeRed" 
        							RepeatBehavior="5x" Duration="0:0:0:0.3"  FillBehavior="HoldEnd" AutoReverse="True"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color" From ="Yellow" To="OrangeRed" 
        							RepeatBehavior="5x" Duration="0:0:0:0.3" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color" From ="Yellow" To="OrangeRed" 
        							RepeatBehavior="5x" Duration="0:0:0.03" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" From="0.7" To="1"
        							RepeatBehavior="5x" Duration="0:0:0.03" FillBehavior="HoldEnd" AutoReverse="True"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="HoverEnter">
                            <Storyboard>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color" From ="Black" To="Yellow" 
        							RepeatBehavior="1x" Duration="0:0:0.003"  FillBehavior="HoldEnd"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color" From ="DarkBlue" To="Yellow" 
        							RepeatBehavior="1x" Duration="0:0:0.003" FillBehavior="HoldEnd"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color" From ="Blue" To="Yellow" 
        							RepeatBehavior="1x" Duration="0:0:0.003" FillBehavior="HoldEnd"/>
                                <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" From="0.7" To="1"
        							RepeatBehavior="1x" Duration="0:0:0.003" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="HoverLeave">
                            <Storyboard>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color" To="Black" 
        							RepeatBehavior="1x" Duration="0:0:0.003"  FillBehavior="HoldEnd"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color" To="DarkBlue" 
        							RepeatBehavior="1x" Duration="0:0:0.003" FillBehavior="HoldEnd"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color" To="Blue" 
        							RepeatBehavior="1x" Duration="0:0:0.003" FillBehavior="HoldEnd"/>
                                <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" To="0.7"
        							RepeatBehavior="1x" Duration="0:0:0.003" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>



                    <VisualStateGroup x:Name="Translations" >
                        <!--can be used for delays-->
                        <!--<VisualStateGroup.Transitions>
                            <VisualTransition x:Name="LEFT" To="moveLeft">
                                -->
                        <!--<Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                 RepeatBehavior="1x" FillBehavior="HoldEnd" AutoReverse="True" Duration="0:0:5"
                                                 From="0" To="-500"/>
                                </Storyboard>-->
                        <!--
                            </VisualTransition>
                            <VisualTransition x:Name="RIGHT" To="moveRight">
                                -->
                        <!--<Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                 RepeatBehavior="1x" FillBehavior="HoldEnd" AutoReverse="True" Duration="0:0:5"
                                                 From="0" To="500"/>
                                </Storyboard>-->
                        <!--
                            </VisualTransition>
                        </VisualStateGroup.Transitions>-->
                        <VisualState x:Name="Chill" />
                        <VisualState x:Name="moveLeft">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="GRTX" Storyboard.TargetProperty="X"
        							RepeatBehavior="1x" FillBehavior="HoldEnd" AutoReverse="True" Duration="0:0:0.4"
        							From="0" To="-700"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="moveRight">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="GRTX" Storyboard.TargetProperty="X"
        							RepeatBehavior="1x" FillBehavior="HoldEnd" AutoReverse="True" Duration="0:0:0.4"
        							From="0" To="700"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Path Stretch="Fill"  x:Name="Border" RenderTransformOrigin="0.5,0.5" Data="M400,400 L475,350 L1000,350 L1075,400 L1000,450 L475,450 z">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="0" x:Name="TTX"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                    <Path.Fill>
                        <RadialGradientBrush x:Name="FUCK" RadiusX="2" RadiusY="1.2" Opacity="0.7"  GradientOrigin="0,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="DarkBlue" Offset="0.7" />
                            <GradientStop Color="Blue" Offset="0.95"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                    <Path.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="0.6" RenderingBias="Quality" ShadowDepth="1" />
                    </Path.Effect>
                </Path>
                <Border Margin="0,0,0,0" x:Name="Borderino">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
                    </Border.Effect>
                    <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" TextBlock.Foreground="White" />
                </Border>
            </Grid>
        </ControlTemplate>

        <DataTemplate x:Key="answerDataTemplate">
            <Grid DataContext="{Binding ElementName=WISH, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                <Path Stretch="Fill"  x:Name="Border" RenderTransformOrigin="0.5,0.5" Data="M400,400 L475,350 L1000,350 L1075,400 L1000,450 L475,450 z">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="0" x:Name="TTX"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                    <Path.Fill>
                        <RadialGradientBrush x:Name="FUCK" RadiusX="2" RadiusY="1.2" Opacity="0.7"  GradientOrigin="0,0.5">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="DarkBlue" Offset="0.7" />
                            <GradientStop Color="Blue" Offset="0.95"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                    <Path.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="0.6" RenderingBias="Quality" ShadowDepth="1" />
                    </Path.Effect>
                </Path>
                <Border Margin="0,0,0,0">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="10" Color="White" Direction="90" Opacity="1" RenderingBias="Quality" ShadowDepth="1" />
                    </Border.Effect>
                </Border>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding ="{Binding Text, ElementName=WISH, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color"  To="Green" 
                                         RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color"  To="Green" 
                                         RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color"  To="Green" 
                                         RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" From="0.7" To="1"
                                                 RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="TTX"  From="0" To="-1000"
                                                 Duration="0:0:0:1" RepeatBehavior="1x" AutoReverse="True" FillBehavior="HoldEnd"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>

                </DataTrigger>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard AutoReverse="True">
                            <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[0].Color"  To="Green" 
                                         RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                            <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[1].Color"  To="Green" 
                                         RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                            <ColorAnimation  Storyboard.TargetName="FUCK" Storyboard.TargetProperty="GradientStops[2].Color"  To="Green" 
                                         RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetName="FUCK" Storyboard.TargetProperty="Opacity" From="0.7" To="1"
                                                 RepeatBehavior="5x" Duration="0:0:0.6" FillBehavior="HoldEnd" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <Style x:Key="forCombobox" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="#FF151515"/>
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="IsEditable" Value="True" />
            <Setter Property="IsTextSearchCaseSensitive" Value="False" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="StaysOpenOnEdit" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="TextBlock.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Blue" RenderingBias="Quality" ShadowDepth="0" />
                </Setter.Value>
            </Setter>
            <!--<Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu Background="AliceBlue" >
                        <Label Content="Удалить" />
                    </ContextMenu>
                </Setter.Value>-->
            <!--</Setter>-->
        </Style>

        <!--<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="24" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="Yellow" 
                    BorderBrush="Orange" BorderThickness="1" />
                <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="Green"
                    BorderBrush="Crimson" Margin="1" BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="SpringGreen" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Blue" />
                    <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="Blue"/>
                </Trigger>
                --><!--<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="2"
                  Background="#FFB2BEF5" BorderBrush="#404040" BorderThickness="1" />
                <Border x:Name="NotBorder" Grid.Column="0"  CornerRadius="2,0,0,2" Margin="1" 
                Background="#FFFFFF" BorderBrush="#404040"  BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="Blue" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>-->
            <!--<ControlTemplate.Triggers>-->
                <!--<Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#FF6680F7" />
                </Trigger>-->
                <!--<Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>--><!--
            </ControlTemplate.Triggers>
        </ControlTemplate>-->

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" 
                    Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
        </ControlTemplate>

        <Style x:Key="anotherTB_STyle" TargetType="TextBox">
            <Setter Property="TextBlock.Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="2" Color="Blue" Direction="90" RenderingBias="Quality" ShadowDepth="0"></DropShadowEffect>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CB_Template" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="IsEditable" Value="True" />
            <Setter Property="IsTextSearchCaseSensitive" Value="False" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="StaysOpenOnEdit" Value="True" />
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>

                            <!--<ToggleButton Name="ToggleButton" Focusable="False">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="Border" Grid.Column="0" BorderThickness="1" />
                                    <Path x:Name="Arrow" Grid.Column="1" Fill="Blue" HorizontalAlignment="Center"
                                        VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </ToggleButton>-->
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" Focusable="false" ClickMode="Press"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" 
                            />

                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />

                            <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource anotherTB_STyle}" 
                            Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                            Margin="3,3,23,3" Focusable="True" Background="Transparent" 
                            />
                            
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#FFFFFF"
                                    BorderThickness="1" BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>-->
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>





		<ControlTemplate x:Key="AnotherComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="24" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="Red" 
                    BorderBrush="Black" BorderThickness="1" />
                <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="BlueViolet"
                    BorderBrush="Brown" Margin="1" BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="BlueViolet" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Yellow" />
                    <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="Brown" />
                </Trigger>
                <!--<Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                    <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrushComboBox}" />
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrushComboBox}" />
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="ooo" TargetType="ComboBox">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="FontFamily" Value="Verdana, Calibri,Arial"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="IsEditable" Value="True" />
            <Setter Property="IsTextSearchCaseSensitive" Value="False" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="StaysOpenOnEdit" Value="True" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsVirtualizing="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="AntiqueWhite" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="Coral"/>
                                    <!--***Scroll***-->
                                    <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="AliceBlue"/>
                                <Setter Property="Background" Value="Black"/>
                                <Setter Property="Opacity" Value="0.72"/>
                            </Trigger>-->
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- ComboBoxItem -->
        <Style x:Key="ComboBoxItem_T" TargetType="ComboBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Green"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="yetAnotherComboBoxStyle" TargetType="ComboBox">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF745005"/>
            </Style.Resources>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="IsEditable" Value="True" />
            <Setter Property="IsTextSearchCaseSensitive" Value="False" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="StaysOpenOnEdit" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="MinHeight" Value="20" />
            

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="2" ClickMode="Press" 
                        Focusable="false"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{StaticResource ComboBoxToggleButton}"/>

                            <ContentPresenter Margin="3,3,23,3" 
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        HorizontalAlignment="Left" IsHitTestVisible="False" x:Name="ContentSite"
                        VerticalAlignment="Center" />

                            <TextBox Style="{x:Null}" 
                        x:Name="PART_EditableTextBox" 
                        Margin="3,3,23,3" 
                        Background="Transparent"
                        Focusable="True" 
                        HorizontalAlignment="Left" 
                        IsReadOnly="True"
                        Template="{StaticResource ComboBoxTextBox}" 
                        VerticalAlignment="Center" 
                        Visibility="Hidden"
                        Text="{TemplateBinding Text}"
                             />

                            <Popup 
                        AllowsTransparency="True" 
                        Focusable="False" 
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        x:Name="Popup" 
                        Placement="Bottom" 
                        PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" 
                            SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" 
                                    Background="White" 
                                    BorderBrush="Blue" 
                                    BorderThickness="1" 
                                    CornerRadius="0" />
                                    <ScrollViewer Margin="2" 
                                SnapsToDevicePixels="True"
                                Background="Gray">
                                        <StackPanel 
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    IsItemsHost="True" 
                                    TextBlock.Foreground="Black"
                                    />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                </Trigger>
            </Style.Triggers>
        </Style>




		  <Style x:Key="onetwo" TargetType="{x:Type ComboBox}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource CustomToggleButton}" />
                            <ContentPresenter Name="ContentSite"
                                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                    Foreground="{TemplateBinding Foreground}"
                                    Effect="{StaticResource DSE}"

                                    Visibility="Visible" />
                            <Popup Name="PART_Popup"
                                IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}">
                                <Grid Name="DropDown"
                                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border Name="DropDownBorder"
                                            Background="{TemplateBinding ComboBox.Background}">
                                        <ScrollViewer Margin="4,6,4,6">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




		 <!--скучновато, но норм-->
        <Style x:Key="forCombobox" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="#FF151515"/>
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="IsEditable" Value="True" />
            <Setter Property="IsTextSearchCaseSensitive" Value="False" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="StaysOpenOnEdit" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="BlueViolet" BlurRadius="15" ShadowDepth="0" RenderingBias="Quality" />
                </Setter.Value>
            </Setter>
            <Setter Property="TextBlock.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Blue" RenderingBias="Quality" ShadowDepth="0" />
                </Setter.Value>
            </Setter>
            <!--<Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu Background="AliceBlue" >
                        <Label Content="Удалить" />
                    </ContextMenu>
                </Setter.Value>-->
            <!--</Setter>-->
        </Style>



		 <!--цвета пиздец сейчас но если подкорректировать то вроде ничего-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="24" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="Yellow" 
                    BorderBrush="Orange" BorderThickness="1" />
                <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="Green"
                    BorderBrush="Crimson" Margin="1" BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="SpringGreen" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Blue" />
                    <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="Blue"/>
                </Trigger>

                <!--<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="2"
                  Background="#FFB2BEF5" BorderBrush="#404040" BorderThickness="1" />
                <Border x:Name="NotBorder" Grid.Column="0"  CornerRadius="2,0,0,2" Margin="1" 
                Background="#FFFFFF" BorderBrush="#404040"  BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="Blue" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>-->
                <!--<ControlTemplate.Triggers>-->
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#FF6680F7" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>




		  <ControlTemplate x:Key="CustomToggleButton" TargetType="ToggleButton">
            <Grid>
                <Border Name="Border" />
                <Border Name="SmallBorder" />
                <Path Name="Arrow" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="CBI_Template" TargetType="ComboBoxItem">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



		<Style x:Key="anotherTB_STyle" TargetType="TextBox">
            <Setter Property="TextBlock.Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="2" Color="Blue" Direction="90" RenderingBias="Quality" ShadowDepth="0"></DropShadowEffect>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CB_Template" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="IsEditable" Value="True" />
            <Setter Property="IsTextSearchCaseSensitive" Value="False" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="StaysOpenOnEdit" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>

                            <!--<ToggleButton Name="ToggleButton" Focusable="False">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="Border" Grid.Column="0" BorderThickness="1" />
                                    <Path x:Name="Arrow" Grid.Column="1" Fill="Blue" HorizontalAlignment="Center"
                                        VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </ToggleButton>-->
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" Focusable="false" ClickMode="Press"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" 
                            />

                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />

                            <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource anotherTB_STyle}" 
                            Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                            Margin="3,3,23,3" Focusable="True" Background="Transparent" 
                            />

                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#FFFFFF"
                                    BorderThickness="1" BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>-->
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>




		DATA TEMPLATES
		#############################################
		DATA TEMPLATES


		<DataTemplate x:Key="Жилая недвижимость аренда спрос">
        <DataTemplate.Resources>
            <ObjectDataProvider x:Key="enumTesting" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ServerResponceToCommand"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        </DataTemplate.Resources>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <!--<ComboBox Grid.ColumnSpan="4" Grid.Row="3" Grid.RowSpan="1" Grid.Column="6" IsEditable="True"
			Style="{StaticResource forCombobox}" ItemsSource="{Binding Source={StaticResource enumTesting}}"
                  ItemsSource="{Binding Path=ServerList}"/>-->

            <ListBox ItemsSource="{Binding Source={DynamicResource ResourceKey=enumTesting}}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ListBoxItem>
                            <CheckBox Style="{StaticResource CheckBoxStyle}"/>
                        </ListBoxItem>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <TextBlock Text="Extra:" Margin="5" FontFamily="Verdana" FontSize="12" Style="{StaticResource forTextBlock}" Grid.Column="0" Grid.Row="0" />
            <UCs:RealtyClient_Agent_rowDetailBlock Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="4" />
            <UCs:ImageHostControl Grid.Row="5" Margin="1" Grid.Column="0" Grid.ColumnSpan="6" />
            
        </Grid>
    </DataTemplate>

    <!--<DataTemplate x:Key="Жилая недвижимость аренда предложение">
    </DataTemplate>

    <DataTemplate x:Key="Жилая недвижимость продажа спрос">
    </DataTemplate>

    <DataTemplate x:Key="Жилая недвижимость аренда предложение">
    </DataTemplate>


    <DataTemplate x:Key="Коммерческая недвижимость аренда спрос">
    </DataTemplate>


    <DataTemplate x:Key="RowDetailTemplate">
        <Grid x:Name="RowDetailGrid" Width="auto" Height="auto">
            <Border HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="5">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FF7EADE6" />
                        <GradientStop Offset="0.75" Color="#AA1055A8" />
                        <GradientStop Offset="1" Color="#AA6015FF" />
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Margin="10" HorizontalAlignment="Center" FontSize="18" FontWeight="Black" Text="Дополнительные возможности" />
                    <Button Content="this" Grid.Row="1" Grid.Column="1" />
                    <Button Content="these" Grid.Row="2" Grid.Column="2" />
                    <Button Content="those" Grid.Row="3" Grid.Column="3" />
                    <Button Content="that" Grid.Row="3" Grid.Column="4" />
                </Grid>
            </Border>
            <Border Margin="0 0 8 0" CornerRadius="5">
                <Border.Background>
                    <RadialGradientBrush Center="0.5,1" GradientOrigin="0,1" Opacity="0.3" RadiusX="0.8" RadiusY="0.8">
                        <GradientStop Offset="1" Color="#AAFFD455" />
                        <GradientStop Offset="1" Color="WhiteSmoke" />
                    </RadialGradientBrush>
                </Border.Background>
            </Border>
        </Grid>
    </DataTemplate>-->