use RealtyAgency

IF OBJECT_ID('getTable_Сотрудник') IS NOT NULL
DROP PROCEDURE getTable_Сотрудник
go

IF OBJECT_ID('getTable_Должность') IS NOT NULL
DROP PROCEDURE getTable_Должность
go

IF OBJECT_ID('getTable_Отдел') IS NOT NULL
DROP PROCEDURE getTable_Отдел
go

IF OBJECT_ID('getTable_Жилая недвижимость аренда') IS NOT NULL
DROP PROCEDURE [getTable_Жилая недвижимость аренда]
GO

create procedure getTable_Сотрудник
@tableNames varchar(30) OUTPUT
as
begin
	select Сотрудник.ID as 'ID>_PK', Сотрудник.ФИО, Должность.Название as 'Должность>_FK', Отдел.Название as 'Отдел>_FK', 
	Сотрудник.Контакты, Сотрудник.Паспорт as 'Паспорт>_UQ_NN_DO_EL=10', СНИЛС as 'СНИЛС>_UQ_NN_DO_EL=11', ИНН as 'ИНН>_UQ_NN_DO_EL=12', Сотрудник.[Дата трудоустройства] as 'Дата трудоустройства>_NN', Сотрудник.[Дата окончания работы]
	from Сотрудник inner join Должность on Сотрудник.[ID должности]=Должность.ID inner join
	Отдел on Сотрудник.[ID отдела]=Отдел.ID 
	ORDER BY Сотрудник.ID asc
	select * from View_Должность
	select * from View_Отдел
	set @tableNames = 'Сотрудник,Должность,Отдел'
end

go
create procedure getTable_Должность
@tableNames varchar(30) output
as
begin
	select * from View_Должность
	order by View_Должность.ID_PK asc
	set @tableNames='Должность'
end

GO

create procedure getTable_Отдел
@tableNames varchar(30) output
as
begin
	select * from View_Отдел
	order by View_Отдел.ID_PK asc
	set @tableNames='Отдел'
end

GO
create procedure [getTable_Жилая недвижимость аренда]
@тип_заявки bit, @tableNames varchar(100) output
as
begin
--тип заявки = 1 → спрос
--тип заявки = 0 → предложение (потомушо П в алфавите раньше С)
--альтернатива двум громадным запросам - динамик сикуль. ну его нахуй
	if (@тип_заявки=1)
	select [Недвижимость].ID as 'ID>_PK', [Жилая недвижимость].[Кол-во комнат] as 'Кол-во комнат>_ENUM=Комнатность;',  [Жилая недвижимость].Улица as 'Интересующие улицы',
	[Жилая недвижимость].Этаж as 'Этаж>_ENUM=Этаж;', [Жилая недвижимость].Этажность as 'Этажность>_ENUM=Этажность;', [Недвижимость].Ориентир, 
	Недвижимость.Площадь as 'Минимальная площадь, м²>_DO­', 
	 Заявка.[Цена вопроса] as 'Макс. арендная плата/месяц>_DO', --as choose(1,'Арендая плата/месяц_DO', 'Макс. арендная плата/месяц_DO'), 
	 Заявка.[Дата добавления], Недвижимость.Детали as 'Комментарии>_SUB',
	[Жилая недвижимость].Комфорт as 'Об объекте>_SUB_ENUM=Комфорт;', [Жилая недвижимость].[Тип дома] as 'Тип дома>_SUB_ENUM=ТипДома;',
	[Жилая недвижимость].[Серия квартиры] as 'Серия квартиры>_ENUM=СерияКвартиры;', [Жилая недвижимость аренда].[Условия аренды] as 'О клиенте>_SUB_ENUM=УсловияАренды;',
	 [Жилая недвижимость].Состояние as 'Состояние>_ENUM=Состояние;', [Жилая недвижимость].Район as 'Район>_SUB_ENUM=Район;',
	Сотрудник.ID as 'Агент>_FK_SUB', Клиент.ID as 'Клиент>_FK_SUB'
	 --coalesce([Клиент: физическое лицо].ФИО, [Клиент: юридическое лицо].Наименование ) as 'Клиент_SUB',
	 --Клиент.Контакты as 'Контакты клиента_SUB', Сотрудник.ID as 'Агент_ID_SUB', Сотрудник.ФИО as 'Агент_SUB', Сотрудник.Контакты as 'Контакты агента_SUB'
	from 
	[Жилая недвижимость] inner join [Недвижимость] on [Жилая недвижимость].[ID объекта]=[Недвижимость].ID 
	inner join [Жилая недвижимость аренда] on [Жилая недвижимость].ID = [Жилая недвижимость аренда].[ID ЖН]
	inner join Заявка on Заявка.[ID недвижимости]=[Недвижимость].ID
	inner join Сотрудник on Заявка.[ID сотрудника]=Сотрудник.ID  
	inner join Клиент on Заявка.[ID клиента]=Клиент.ID 
	--left join [Клиент: физическое лицо] on Клиент.ID=[Клиент: физическое лицо].[ID клиента]
	--left join [Клиент: юридическое лицо] on Клиент.ID=[Клиент: юридическое лицо].[ID клиента]
	order by Недвижимость.ID asc
	else 
	select [Недвижимость].ID as 'ID>_PK', [Жилая недвижимость].[Кол-во комнат] as 'Кол-во комнат>_ENUM=Комнатность;',
	[Жилая недвижимость].Улица as 'Улица', [Жилая недвижимость].[Номер дома], [Жилая недвижимость].Этаж as 'Этаж>_ENUM=Этаж;',
	 [Жилая недвижимость].Этажность as 'Этажность>_ENUM=Этажность;', [Недвижимость].Ориентир, 
	 Недвижимость.Площадь as 'Площадь, м²>_DO­', 
	 Заявка.[Цена вопроса] as 'Арендная плата/месяц', --as choose(1,'Арендая плата/месяц_DO', 'Макс. арендная плата/месяц_DO'), 
	 Заявка.[Дата добавления], Недвижимость.Детали as 'Комментарии>_SUB',
	[Жилая недвижимость].Комфорт as 'Об объекте>_SUB_ENUM=КомфортЖН;', [Жилая недвижимость].[Тип дома] as 'Тип дома>_SUB_ENUM=ТипДома;',
	[Жилая недвижимость].[Серия квартиры] as 'Серия квартиры>_ENUM=СерияКвартиры;', 
	[Жилая недвижимость аренда].[Условия аренды] as 'Условия аренды>_SUB_ENUM=УсловияАрендыЖН;',
	 [Жилая недвижимость].Состояние as 'Состояние>_ENUM=Состояние;', [Жилая недвижимость].Район as 'Район>_SUB_ENUM=Район;',
	Сотрудник.ID as 'Агент>_FK_SUB', Клиент.ID as 'Клиент>_FK_SUB'
	 --coalesce([Клиент: физическое лицо].ФИО, [Клиент: юридическое лицо].Наименование ) as 'Клиент_SUB',
	 --Клиент.Контакты as 'Контакты клиента_SUB', Сотрудник.ID as 'Агент_ID_SUB', Сотрудник.ФИО as 'Агент_SUB', Сотрудник.Контакты as 'Контакты агента_SUB'
	from 
	[Жилая недвижимость] inner join [Недвижимость] on [Жилая недвижимость].[ID объекта]=[Недвижимость].ID 
	inner join [Жилая недвижимость аренда] on [Жилая недвижимость].ID = [Жилая недвижимость аренда].[ID ЖН]
	inner join Заявка on Заявка.[ID недвижимости]=[Недвижимость].ID
	inner join Сотрудник on Заявка.[ID сотрудника]=Сотрудник.ID  
	inner join Клиент on Заявка.[ID клиента]=Клиент.ID 
	left join [Клиент: физическое лицо] on Клиент.ID=[Клиент: физическое лицо].[ID клиента]
	left join [Клиент: юридическое лицо] on Клиент.ID=[Клиент: юридическое лицо].[ID клиента]
	order by Недвижимость.ID asc

	select Сотрудник.ID as 'ID>_PK', Сотрудник.ФИО as 'Агент', Сотрудник.Контакты from Сотрудник 
		inner join Должность on Сотрудник.[ID должности]=Должность.ID and LOWER(Должность.Название) like '%агент%'

	select Клиент.ID as 'ID>_PK',
	 coalesce([Клиент: физическое лицо].ФИО, case when @тип_заявки=1 then [Клиент: юридическое лицо].Наименование else null end) as 'Клиент',
	 Клиент.Контакты 
			from Клиент left outer join [Клиент: физическое лицо] on Клиент.ID=[Клиент: физическое лицо].[ID клиента]
						left outer join [Клиент: юридическое лицо] on Клиент.ID=[Клиент: юридическое лицо].[ID клиента] and @тип_заявки=0
						where not coalesce([Клиент: физическое лицо].ФИО, case when @тип_заявки=1 then [Клиент: юридическое лицо].Наименование else null end) is null
	set @tableNames = 'Жилая недвижимость аренда, Агент, Клиент'
end